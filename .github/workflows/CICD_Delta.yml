# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  # pull_request:
   #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Decrypting Server Key
        shell: bash
        run: openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}
      - name: Authorizing Org
        uses: forcedotcom/salesforcedx-actions@master
        with:
            args: force:auth:jwt:grant --clientid ${{ secrets.TARGET_CONSUMER_KEY }} --jwtkeyfile assets/server.key --username ${{ secrets.TARGET_USER_NAME }} --setdefaultusername
      - name: "Install App and Create Delta"   
        run: |  
           #npm install sfdx-cli 
           #sfdx plugins:install sfdx-git-delta         
           sudo npm install sfdx-git-delta@latest -g           
           #git config --global user.email "siddharthvarshneya@gmail.com"
           #git config --global user.name "SiddharthVarshneya "
           #git commit --allow-empty -n -m "Initial commit"
           #git diff Head Head^ > mypatch
           #cat mypatch
           #git checkout master
           #git reflog > headshist
           #cat headshist
           sgd --to HEAD --from HEAD^ --repo . --output .
           cat package/package.xml    
      - name: Deploying Metadata
        uses: forcedotcom/salesforcedx-actions@master
        with:
          args: force:source:deploy -x package/package.xml
